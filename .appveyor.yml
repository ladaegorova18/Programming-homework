image: Visual Studio 2019

environment:
  matrix:
  - solution_path: Tests\Task1\Task1.sln
  - solution_path: Tests\Test1.1\Task1.sln
  - solution_path: Tests\Test2.1\Test2.1.sln
  
  - solution_path: sem2\homework1\Factorial\Factorial.sln
  - solution_path: sem2\homework1\Fibonacci\Fibonacci.sln
  - solution_path: sem2\homework1\MatrixSorting\MatrixSorting.sln
  - solution_path: sem2\homework1\Sorting\Sorting.sln
  - solution_path: sem2\homework1\Spiral\Spiral.sln
  - solution_path: sem2\homework2\Hash-Table\Hash-Table.sln
  - solution_path: sem2\homework2\OneLinkedList\OneLinkedList.sln
  - solution_path: sem2\homework2\Stack_Calculator\StackCalculator.sln
  - solution_path: sem2\homework3\Hash-Table\Hash-Table.sln
  - solution_path: sem2\homework4\ParseTree\ParseTree.sln
  - solution_path: sem2\homework4\UniqueList\UniqueList.sln
  - solution_path: sem2\homework6\ConsoleGame\ConsoleGame.sln
  - solution_path: sem2\homework6\ListMethods\ListMethods.sln
  - solution_path: sem2\homework7\Clock\Clock.sln
  - solution_path: sem2\homework8\GenericList\GenericList.sln
  - solution_path: sem2\homework8\GenericSet\GenericSet.sln
  
  - solution_path: sem3\homework1\LazyInterface\LazyInterface.sln
  - solution_path: sem3\homework2\MyThreadPool\MyThreadPool.sln
  - solution_path: sem3\homework4\MyNUnit\MyNUnit.sln
  - solution_path: sem3\homework1\LazyInterface\LazyInterface.sln
  - solution_path: sem3\Tests\Test1\Test1.sln
  - solution_path: sem3\Tests\Test2\Test2.sln
  
  - solution_path: sem4\LambdaInterpreter\LambdaInterpreter.sln
  - solution_path: sem4\LocalNetwork\LocalNetwork.sln
  - solution_path: sem4\LazyAdvanced\LazyAdvanced.sln
  - solution_path: sem4\Factorial\Factorial.sln
  - solution_path: sem4/EvenNumbers/EvenNumbers.sln
  - solution_path: sem4/ParseTree/ParseTree.sln
  - solution_path: sem4/MapForTrees/MapForTrees.sln
  - solution_path: sem4\BracketsChecker\BracketsChecker.sln
  - solution_path: sem4/Pointfree/Pointfree.sln
  - solution_path: sem4\PhoneBook\PhoneBook.sln
  - solution_path: sem4\SpecifiedAccuracy\SpecifiedAccuracy.sln
  - solution_path: Tests\Task1\Task1.sln

before_build:
  - ps: |
      $desiredSdkVersion = "2.1.300"
      
      # Check if the specific .NET Core SDK version is installed
      $installedSdks = & "C:\Program Files\dotnet\dotnet.exe" --list-sdks
      if ($installedSdks -notcontains "$desiredSdkVersion") {
        Write-Host "SDK version $desiredSdkVersion is not installed. Installing..."
        Invoke-WebRequest -Uri https://builds.dotnet.microsoft.com/dotnet/Sdk/2.1.300/dotnet-sdk-2.1.300-win-x64.exe -OutFile dotnet-sdk-2.1.300-win-x64.exe
        Start-Process -FilePath dotnet-sdk-2.1.300-win-x64.exe -ArgumentList "/quiet", "/install" -Wait
      } else {
        Write-Host "SDK version $desiredSdkVersion is already installed."
      }
      
      nuget restore "$env:solution_path"


build_script:
  - msbuild "%solution_path%"

after_build:
  - ps: |
      $solutionDir = Split-Path "$env:solution_path"
      $testProjects = Get-ChildItem -Path $solutionDir -Include *.Tests.fsproj,*Tests.csproj -File -Recurse
      if ($testProjects.Count -eq 0) {
        Write-Host "No test projects found in $solutionDir or subfolders."
      } else {
        $testProjects | ForEach-Object {
          Write-Host "Running tests in $($_.FullName)"
          dotnet test $_.FullName
        }
      }
